name: CI

on:
  push:
    branches: ["main"]
    tags:
      - "*"
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: "2"

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: "3.9"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements-dev.txt

      - name: Test with black
        run: |
          black . --check --target-version py39

      - name: Test with flake8
        run: |
          flake8 .

      - name: Fix dependencies
        run: |
          pip uninstall -y apsw
          pip install "apsw-wheels==3.36.0.post1"

      - name: Install self
        run: |
          pip install -e .

      - name: Test with pytest
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Set up mypy cache
        uses: actions/cache@v2
        with:
          path: .mypy_cache
          key: mypy1-${{ hashFiles('./deskman_api/**/*.py') }}
          restore-keys: mypy1-

      - name: Test with mypy
        run: |
          mypy .

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
